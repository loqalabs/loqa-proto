name: Protocol Buffer CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

jobs:
  validate:
    name: Validate Protocol Buffers
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Protocol Buffer Compiler
      uses: arduino/setup-protoc@v2
      with:
        version: '29.x'
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Validate proto files
      run: |
        protoc --descriptor_set_out=/dev/null audio.proto

  generate-go:
    name: Generate Go Bindings
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.3'

    - name: Verify Go version
      run: go version

    - name: Set up Protocol Buffer Compiler
      uses: arduino/setup-protoc@v2
      with:
        version: '29.x'
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install protoc-gen-go
      run: |
        go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

    - name: Generate Go bindings
      run: |
        ./generate.sh

    - name: Check for differences
      run: |
        git diff --exit-code go/ || (
          echo "Generated Go bindings are out of date. Please run ./generate.sh"
          exit 1
        )

    - name: Test Go module
      run: |
        cd go
        go mod tidy
        go test ./...

    - name: Upload Go bindings
      uses: actions/upload-artifact@v4
      with:
        name: go-bindings
        path: go/

  generate-other:
    name: Generate Other Language Bindings
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Protocol Buffer Compiler
      uses: arduino/setup-protoc@v2
      with:
        version: '29.x'
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python protobuf
      run: |
        pip install grpcio-tools

    - name: Generate Python bindings
      run: |
        mkdir -p python
        python -m grpc_tools.protoc \
          --python_out=python/ \
          --grpc_python_out=python/ \
          audio.proto

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Generate JavaScript bindings
      run: |
        npm install -g grpc-tools
        mkdir -p javascript
        grpc_tools_node_protoc \
          --js_out=import_style=commonjs,binary:javascript/ \
          --grpc_out=grpc_js:javascript/ \
          audio.proto

    - name: Upload language bindings
      uses: actions/upload-artifact@v4
      with:
        name: multi-language-bindings
        path: |
          python/
          javascript/

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      security-events: write
      actions: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'